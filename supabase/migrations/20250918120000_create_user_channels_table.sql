
CREATE TABLE public.user_channels (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    channel_name text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);

ALTER TABLE public.user_channels OWNER TO postgres;

ALTER TABLE public.user_channels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_channels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.user_channels
    ADD CONSTRAINT user_channels_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.user_channels
    ADD CONSTRAINT user_channels_user_id_channel_name_key UNIQUE (user_id, channel_name);

ALTER TABLE ONLY public.user_channels
    ADD CONSTRAINT user_channels_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE;

-- Enable RLS
ALTER TABLE public.user_channels ENABLE ROW LEVEL SECURITY;

-- Create policy for users to manage their own channels
CREATE POLICY "Users can manage their own channels" ON public.user_channels
    FOR ALL
    USING (auth.uid() = user_id)
    WITH CHECK (auth.uid() = user_id);
