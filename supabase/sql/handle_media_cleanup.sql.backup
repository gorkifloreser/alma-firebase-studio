-- 游닆 SCRIPT DE RESPALDO PARA LA FUNCI칍N DE LIMPIEZA DE MEDIOS
-- Este archivo contiene la definici칩n de la funci칩n y los triggers
-- para la limpieza autom치tica de archivos en Supabase Storage.
-- Puedes ejecutar este script para restaurar la funcionalidad.

-- ----------------------------------------------------------------
-- PASO 1: Crear la Funci칩n de Limpieza
-- ----------------------------------------------------------------
CREATE OR REPLACE FUNCTION public.handle_media_cleanup()
RETURNS TRIGGER AS $$
DECLARE
    paths_to_delete TEXT[];
    bucket_name TEXT := 'Alma';
    slide RECORD;
    file_path TEXT;
    storage_url_prefix TEXT;
BEGIN
    storage_url_prefix := '%/storage/v1/object/public/' || bucket_name || '/%';
    paths_to_delete := ARRAY[]::TEXT[];

    IF OLD.image_url IS NOT NULL AND OLD.image_url LIKE storage_url_prefix THEN
        file_path := substring(OLD.image_url from '/storage/v1/object/public/' || bucket_name || '/(.*)');
        IF file_path IS NOT NULL THEN
           paths_to_delete := array_append(paths_to_delete, file_path);
        END IF;
    END IF;

    IF OLD.video_url IS NOT NULL AND OLD.video_url LIKE storage_url_prefix THEN
        file_path := substring(OLD.video_url from '/storage/v1/object/public/' || bucket_name || '/(.*)');
        IF file_path IS NOT NULL THEN
           paths_to_delete := array_append(paths_to_delete, file_path);
        END IF;
    END IF;

    IF OLD.carousel_slides IS NOT NULL THEN
        BEGIN
            FOR slide IN SELECT * FROM jsonb_to_recordset(OLD.carousel_slides) AS x(imageUrl TEXT)
            LOOP
                IF slide.imageUrl IS NOT NULL AND slide.imageUrl LIKE storage_url_prefix THEN
                    file_path := substring(slide.imageUrl from '/storage/v1/object/public/' || bucket_name || '/(.*)');
                    IF file_path IS NOT NULL THEN
                        paths_to_delete := array_append(paths_to_delete, file_path);
                    END IF;
                END IF;
            END LOOP;
        EXCEPTION WHEN others THEN
            RAISE WARNING 'Error procesando carousel_slides para limpieza. ID de fila: %. Error: %', OLD.id, SQLERRM;
        END;
    END IF;

    IF array_length(paths_to_delete, 1) > 0 THEN
        PERFORM storage.delete_objects(bucket_name, paths_to_delete);
    END IF;

    RETURN OLD;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ----------------------------------------------------------------
-- PASO 2: Crear los Triggers
-- ----------------------------------------------------------------
DROP TRIGGER IF EXISTS before_delete_media_item ON public.media_plan_items;
CREATE TRIGGER before_delete_media_item
BEFORE DELETE ON public.media_plan_items
FOR EACH ROW
EXECUTE FUNCTION public.handle_media_cleanup();

DROP TRIGGER IF EXISTS before_update_media_item ON public.media_plan_items;
CREATE TRIGGER before_update_media_item
BEFORE UPDATE ON public.media_plan_items
FOR EACH ROW
WHEN (
    OLD.image_url IS DISTINCT FROM NEW.image_url OR 
    OLD.carousel_slides IS DISTINCT FROM NEW.carousel_slides OR
    OLD.video_url IS DISTINCT FROM NEW.video_url
)
EXECUTE FUNCTION public.handle_media_cleanup();
